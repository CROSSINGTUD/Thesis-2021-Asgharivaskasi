package java.jca

entity SSLContext {
	
	var protocol;
	var kms;
	var tms;
	var eng;
	var sr;
	
	op instantiate {
		javax.net.ssl.SSLContext.getInstance(
			protocol: java.lang.String
		);
		javax.net.ssl.SSLContext.getInstance(
			protocol: java.lang.String,
			_
		);
		forbidden javax.net.ssl.SSLContext.getDefault();
	}
	op initialize{
		javax.net.ssl.SSLContext.init(
			kms: javax.net.ssl.KeyManager[],
			tms: javax.net.ssl.TrustManager[],
			sr: java.security.SecureRandom
		);
	}
	op create{
		eng = javax.net.ssl.SSLContext.createSSLEngine();
		eng = javax.net.ssl.SSLContext.createSSLEngine(_,_);
	}
} // constraint, requires