package java.jca

rule JCAProvider_SSLEngine_1{
	using
		SSLEngine as ssle
	ensure
		order
			(ssle.enableCipher(), ssle.enableProtocol())|
			(ssle.enableProtocol(), ssle.enableCipher())
	onfail
		InvalidOrderOfSSLEngine
}
//constraints- no element built-in
//rule JCAProvider_SSLEngine_2{
//	using
//		SSLEngine as ssle
//	ensure
//		ssle.protocols in ["TLSv1.2"]
//	onfail
//		InvalidProtocolsOfSSLEngine
//}
//rule JCAProvider_SSLEngine_3{
//	using
//		SSLEngine as ssle
//	ensure
//		ssle.cipherSuits in ["TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
//				"TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
//				"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
//				"TLS_RSA_WITH_AES_256_GCM_SHA384",
//				"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384",
//				"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384",
//				"TLS_DHE_RSA_WITH_AES_256_GCM_SHA384",
//				"TLS_DHE_DSS_WITH_AES_256_GCM_SHA384",
//				"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
//				"TLS_RSA_WITH_AES_128_GCM_SHA256",
//				"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256",
//				"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256",
//				"TLS_DHE_RSA_WITH_AES_128_GCM_SHA256",
//				"TLS_DHE_DSS_WITH_AES_128_GCM_SHA256",
//				"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
//				"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384",
//				"TLS_RSA_WITH_AES_256_CBC_SHA256",
//				"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384",
//				"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384",
//				"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256",
//				"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256",
//				"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
//				"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
//				"TLS_RSA_WITH_AES_128_CBC_SHA256",
//				"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256",
//				"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256",
//				"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256",
//				"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256"]
//	onfail
//		InvalidCipherSuitesOfSSLEngine
//}