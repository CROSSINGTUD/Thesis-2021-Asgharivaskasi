package java.jca

rule JCAProvider_SecretKeyFactory_1{
	using
		SecretKeyFactory as skf
	ensure
		order
			skf.instantiate(),
			skf.generate()
	onfail
		InvalidOrderOfSecretKeyFactory
}
//constraints
rule JCAProvider_SecretKeyFactory_2{
	using
		SecretKeyFactory as skf
	when 
		_has_value(skf.keyFactoryAlgorithm)
	ensure
		skf.keyFactoryAlgorithm in ["PBKDF2WithHmacSHA512", "PBKDF2WithHmacSHA384", "PBKDF2WithHmacSHA256", "PBKDF2WithHmacSHA224", 
				"PBEWithHmacSHA512AndAES_128","PBEWithHmacSHA384AndAES_128", "PBEWithHmacSHA384AndAES_128", 
				"PBEWithHmacSHA224AndAES_128", "PBEWithHmacSHA256AndAES_128","PBEWithHmacSHA224AndAES_256", 
				"PBEWithHmacSHA256AndAES_256", "PBEWithHmacSHA384AndAES_256", "PBEWithHmacSHA512AndAES_256"]
	onfail
		InvalidkeyFactoryAlgorithmOfSecretKeyFactory
}
//requires
//TODO: see if it works
rule JCAProvider_SecretKeyFactory_3{
	using
		SecretKeyFactory as skf,
		SecretKeySpec as sks,
		X509EncodedKeySpec as x509,
		PBEKeySpec as pbeks
	when
		_has_value(skf.keyspec)
	ensure
		_is(akf.keyspec, sks) || _is(akf.keyspec, x509) || _is(akf.keyspec, pbeks)
	onfail
		InvalidkeyKeySpecOfSecretKeyFactory
}